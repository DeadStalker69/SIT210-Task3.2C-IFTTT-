/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/bf825547-cfa7-4ca7-b520-a1ae340ce91a 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudIlluminance lightSensor;
  bool sunlight;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Arduino.h>

#include <hp_BH1750.h>    //including library for reading data from BH1750
hp_BH1750 sensor;        

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  sensor.begin(BH1750_TO_GROUND);     //intialise the BH1750 sensor
  sensor.start();                     //start the sensor reading

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  onLightSensorChange();      //calling the function
}

void onLightSensorChange()  {
  
  if (sensor.hasValue())              //checking if any input is availible from the sensor
  {
  
  if (sensor.getLux() > 700)          // if case to check the input value from sensor.
  {
    lightSensor = sensor.getLux();    //input the value from sensor in the pre-defined variable
    sunlight = true;                  //change the boolean variable to true.
    Serial.println(lightSensor);      //show the sensor data onn serial monitor
  }
  else
  {
    sunlight = false;                 //change the boolean vartiable to false
    Serial.println(sensor.getLux());  //print the sensor data on seril monitor
  }
  
  delay(3000);
  sensor.start();                     //restart the sensor.
  }
}
